// 3.Faça um programa que receba valores aleatórios e diferentes em um vetor de inteiros de 6 posições 
// e implemente o insert sort em uma função para ordenar este vetor.


#include <stdio.h>  //biblioteca padrão de entrada e saída.

void insertionSort(int vetor[], int tam) { //definição da função insertionSort que recebe o vetor e seu tamanho.
 
    int atual = 0; //variável 'atual' que representa a posição do elemento a ser inserido na ordenação;
    int prox = 0; //variável 'prox' (proxima) que compara e move os elementos;
    int aux; //variável AUXiliar 'aux' que armazena, temporariamente, um valor durante a troca.
 
    for (atual = 1; atual < tam; atual++) { //loop a partir do segundo elemento do vetor 1 até o último elemento;
        prox = atual; //define 'prox' como a posição atual, para começar a comparação.
        
        //enquanto 'prox' ofr maior que 0 e o elemento anterior for maior que o elemento atual:
        while (prox > 0 && vetor[prox - 1] > vetor[prox]) {
            
            //outra verificação se o elemento anterior é maior que o atual:
            if (vetor[prox - 1] > vetor[prox]) {
                aux = vetor[prox]; //armazenando o valor atual em 'aux' para a troca;
                vetor[prox] = vetor[prox - 1]; //move o elemento anterior para a posição atual;
                vetor[prox - 1] = aux; //coloca o valor armazenado em 'aux' na posição anterior;
                prox--; //move 'prox' uma posição para trás para continuar a comparação.
            }
        }
    }
}



int main() { //início da função main (a principal);
    int i; //variável contador;
    int vetor[6]; //declaração de um vetor de inteiros com 6 posições;

    //print de mensagem pedindo ao usuário que insira 6 valores
    printf("insira 6 valores inteiros, aleatorios e diferentes:\n");

    //laço para capturar os 6 valores do usuário:
    for (i = 0; i < 6; i++) { //laço for que será executado 6 vezes (de 0 até 5) para preencher o vetor com os valores;
        printf("Valor %d: ", i + 1); //mensagem pedindo o valor de cada posição do vetor;
        scanf("%d", &vetor[i]); //lê o número dado pelo usuário e armazena-o na posição i do vetor.
    }

    //chama a função insertionSort para ordenar os valores do vetor:
    insertionSort(vetor, 6);

    //exibição dos valores ordenados:
    printf("\nvalores ordenados:\n"); 
    for (i = 0; i < 6; i++) { //laço for que percorre o vetor ordenado para exibir os valores na tela;
        printf("valor %d: %d\n", i + 1, vetor[i]); //exibição posição do vetor (i + 1) e posição i no vetor.
    }

    return 0; //fim da função main, retornando o valor 0. programa executado com sucesso!
}
