// 7.Faça um programa que receba valores aleatórios e diferentes em um vetor de inteiros de 6 posições 
// e implemente o shell sort em uma função para ordenar este vetor.


#include<stdio.h> //biblioteca padrão de entrada e saída.
#include <stdlib.h> //biblioteca padrão de funções utilitárias.

//função para ordenar um vetor usando o shellSort:
void shellSort(int *vetor, int tam) {

    //variáveis:
    int atual = 0; // 'atual' representa o índice do elemento atual a ser comparado;
    int prox = 0; // 'prox' é usado para mover os elementos enquanto o processo de ordenação ocorre;
    int valor = 0; // 'valor' armazena o elemento que será inserido na posição correta;
    int salto = 1; // 'salto' define o intervalo entre os elementos que serão comparados;

    while (salto < tam) { //define o valor inicial do 'salto' (seguindo a fórmula 3*salto+1);
        salto = 3 * salto + 1; //calcula o salto inicial segundo o tamanho do vetor.
    }

    //loop principal do shellSort:
    while (salto > 0) { //enquanto o salto for maior que zero...
        for (atual = salto; atual < tam; atual++) { //percorrerá o vetor a partir do índice 'salto' até o final do vetor;
            valor = vetor[atual]; //armazenamento do valor atual do vetor;
            prox = atual; //'prox' começa na posição do índice atual;

            //enquanto 'prox' estiver dentro do intervalo do salto e o valor for menor ou igual ao elemento anterior no salto:
            while (prox > salto - 1 && valor <= vetor[prox - salto]) {
                vetor[prox] = vetor[prox - salto]; //move o elemento da posição anterior para a posição atual;
                prox = prox - salto; //atualiza o índice para continuar a mover os elementos pra trás;
            }
            vetor[prox] = valor; //insere o valor na posição correta, a qual foi encontrada após o deslocamento dos elementos;
        }
        salto = salto / 3; //diminue o salto, o dividindo por 3, para ir afinando a ordenação conforme o vetor vai se organizando.
    }
}

int main() { //início da função main (a principal);
    int i; //variável contador;
    int vetor[6]; //declaração de um vetor de inteiros com 6 posições;

    //print de mensagem pedindo ao usuário que insira 6 valores
    printf("insira 6 valores inteiros, aleatorios e diferentes:\n");

    //laço para capturar os 6 valores do usuário:
    for (i = 0; i < 6; i++) { //laço for que será executado 6 vezes (de 0 até 5) para preencher o vetor com os valores;
        printf("Valor %d: ", i + 1); //mensagem pedindo o valor de cada posição do vetor;
        scanf("%d", &vetor[i]); //lê o número dado pelo usuário e armazena-o na posição i do vetor.
    }

    //chama a função shellSort para ordenar os valores do vetor:
    shellSort(vetor, 6);

    //exibição dos valores ordenados:
    printf("\nvalores ordenados:\n"); 
    for (i = 0; i < 6; i++) { //laço for que percorre o vetor ordenado para exibir os valores na tela;
        printf("valor %d: %d\n", i + 1, vetor[i]); //exibição posição do vetor (i + 1) e posição i no vetor.
    }

    return 0; //fim da função main, retornando o valor 0. programa executado com sucesso!
}
